<?xml version="1.0" encoding="UTF-8"?>
<project name="Application" default="build" basedir=".">

    <tstamp>
        <format property="current.date" pattern="yyyyMMdd" />
    </tstamp>

	<property name="project" value="steam" />
	<property name="applicationDir" value="${basedir}" />
	<property name="buildDir" value="${basedir}/build" />



    <target name="build" depends="prepare, symfony_build"/>

	<target name="prepare">
        <delete dir="${buildDir}/logs" />
        <delete dir="${buildDir}/html" />
	    <mkdir dir="${buildDir}/logs" />
	    <mkdir dir="${buildDir}/logs/symfony_logs" />
	    <mkdir dir="${buildDir}/logs/phpunit_logs" />
	    <mkdir dir="${buildDir}/html/phpdoc" />
		<mkdir dir="${buildDir}/html/phpcb" />
		<mkdir dir="${buildDir}/html/phpcov" />
	    <mkdir dir="${buildDir}/html/phpunit" />
	</target>

    <target name="composer">
        <exec executable="composer" dir="${applicationDir}">
            <arg line="install" />
        </exec>
    </target>

    <!--Symfony-->
    <target name="symfony_build">
        <property name="symfonyLogs" value="${buildDir}/logs/symfony_logs" />
        <exec executable="php" dir="${applicationDir}" output="${symfonyLogs}/symfony.txt">
            <arg line="app/console" />
            <arg line="cache:clear --env=prod" />
        </exec>
        <exec executable="php" dir="${applicationDir}" output="${symfonyLogs}/symfony.txt">
            <arg line="app/console" />
            <arg line="assets:install --symlink" />
        </exec>
        <exec executable="php" dir="${applicationDir}" output="${symfonyLogs}/symfony.txt">
            <arg line="app/console" />
            <arg line="assetic:dump --env=prod" />
        </exec>
        <exec executable="php" dir="${applicationDir}" output="${symfonyLogs}/symfony.txt">
            <arg line="app/console" />
            <arg line="doctrine:schema:update --force" />
        </exec>
        <echo message="##teamcity[publishArtifacts '${symfonyLogs}/symfony.txt']" />
        <!--<echo message="##teamcity[publishArtifacts '${symfonyLogs}/assetic_dump.txt']" />-->
    </target>

    <!--PHPUnit-->
    <target name="phpunit" description="PHPUnit">
        <property name="phpunitLogs" value="${buildDir}/logs/phpunit_logs" />
        <property name="junit" value="${phpunitLogs}/phpunit.xml" />
        <copy file="${applicationDir}/app/config/parameters.build.yml" tofile="${applicationDir}/app/config/parameters.yml" />
        <exec dir="${applicationDir}" executable="phpunit" output="${phpunitLogs}/phpunit.txt">
            <arg line="--configuration &quot;${applicationDir}/app/phpunit.xml&quot;" />
            <arg line="--coverage-html &quot;${phpunitLogs}/coverage&quot;" />
            <arg line="--log-junit &quot;${junit}&quot;" />
        </exec>
        <echo message="##teamcity[publishArtifacts '${phpunitLogs}/phpunit.txt']" />
        <echo message="##teamcity[importData type='junit' path='${junit}']" />
        <zip destfile="${phpunitLogs}/coverage.zip" basedir="${phpunitLogs}/coverage"/>
        <delete dir="${phpunitLogs}/coverage"/>
        <echo message="##teamcity[publishArtifacts '${phpunitLogs}']" />
    </target>

    <!--Copy to remote server-->
    <property name="remote.user" value="root" />
    <property name="remote.server" value="192.168.10.114" />
    <property name="remote.dir" value="/srv/www/steam.10017" />
    <property name="remote.db_name" value="symfony" />
    <property name="remote.db_user" value="root" />
    <property name="remote.owner" value="admin" />
    <property name="remote.group" value="www" />

    <target name="symfony_pre">
        <copy file="${applicationDir}/web/.htaccess.prod" tofile="${applicationDir}/web/.htaccess" failonerror="false"/>
    </target>

    <target name="rsync" depends="backup_files, backup_db">
        <exec executable="rsync" dir="${applicationDir}">
            <arg line="-avz --chmod=g+w,Da+rX,Fa+r,F-X --exclude 'build'--exclude 'web/files' --exclude 'app/config/parameters.yml' --exclude 'app/logs/*' ./ ${remote.user}@${remote.server}:${remote.dir}" />
            <arg line="--exclude 'build'--exclude 'web/files' --exclude 'app/config/parameters.yml' --exclude 'app/logs/*' ./ ${remote.user}@${remote.server}:${remote.dir}" />
            <arg line="--exclude 'web/files' --exclude 'app/config/parameters.yml' --exclude 'app/logs/*' ./ ${remote.user}@${remote.server}:${remote.dir}" />
            <arg line="--exclude 'app/config/parameters.yml' --exclude 'app/logs/*' ./ ${remote.user}@${remote.server}:${remote.dir}" />
            <arg line="--exclude 'app/logs' ./ ${remote.user}@${remote.server}:${remote.dir}" />
            <arg line="--exclude 'app/cache' ./ ${remote.user}@${remote.server}:${remote.dir}" />
            <arg line="./ ${remote.user}@${remote.server}:${remote.dir}" />
        </exec>
    </target>
    <target name="backup_files">
        <!--<sshexec trust="true" keyfile="${user.home}/.ssh/id_rsa" host="${remote.server}" username="root" command="zip -r ${remote.dir}/../../backup_${project}_files_${current.date}.zip ${remote.dir}" />-->
    </target>
    <target name="backup_db" depends="dump">
        <!--<sshexec trust="true" keyfile="${user.home}/.ssh/id_rsa" host="${remote.server}" username="root" command="zip -r ${remote.dir}/../../backup_${project}_db_${current.date}.zip ${remote.dir}/../../${project}.sql" />-->
    </target>
    <target name="dump">
        <!--<sshexec trust="true" keyfile="${user.home}/.ssh/id_rsa" host="${remote.server}" username="root" command="mysqldump -u ${remote.db_user} ${remote.db_name} > ${remote.dir}/../../${project}.sql" />-->
    </target>

    <target name="symfony_post">
        <sshexec trust="true" keyfile="${user.home}/.ssh/id_rsa" host="${remote.server}" username="root" command="chown -R ${remote.owner}:${remote.group} ${remote.dir}/app/cache" />
        <sshexec trust="true" keyfile="${user.home}/.ssh/id_rsa" host="${remote.server}" username="root" command="chown -R ${remote.owner}:${remote.group} ${remote.dir}/app/logs" />
        <sshexec trust="true" keyfile="${user.home}/.ssh/id_rsa" host="${remote.server}" username="root" command="chown -R ${remote.owner}:${remote.group} ${remote.dir}/web" />
        <sshexec trust="true" keyfile="${user.home}/.ssh/id_rsa" host="${remote.server}" username="root" command="php ${remote.dir}/app/console cache:clear --env=prod" />
        <sshexec trust="true" keyfile="${user.home}/.ssh/id_rsa" host="${remote.server}" username="root" command="php ${remote.dir}/app/console doctrine:schema:update --force" />
    </target>
</project>
